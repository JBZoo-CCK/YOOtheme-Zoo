/* Copyright (C) YOOtheme GmbH, http://www.gnu.org/licenses/gpl.html GNU/GPL */

(function($){var Plugin=function(){};$.extend(Plugin.prototype,{name:"AliasEdit",options:{url:"index.php?option=com_zoo&controller=manager&format=raw&task=getalias",force_safe:false,edit:false},initialize:function(input,options){this.options=$.extend({},this.options,options);var $this=this;this.input=input;this.trigger=input.find("a.trigger");this.panel=input.find("div.panel");this.text=this.panel.find("input:text");this.name=input.find('input[name="name"]');if(!this.options.edit){this.name.bind("blur.name",function(){if($this.name.val().length&&!$this.text.val().length){$this.setAlias($this.name.val())}})}this.trigger.bind("click",function(event){event.preventDefault();$(this).hide();$this.panel.addClass("active");$this.text.focus();$this.text.bind("keydown",function(event){event.stopPropagation();if(event.which==13){$this.setAlias($this.text.val())}if(event.which==27){$this.remove()}});$this.input.find("input.accept").bind("click",function(event){event.preventDefault();$this.setAlias($this.text.val())});$this.input.find("a.cancel").bind("click",function(event){event.preventDefault();$this.remove()})})},setAlias:function(name){var $this=this;if(!name.length){name=$this.name.val()}$.getJSON(this.options.url,{name:name,force_safe:this.options.force_safe?1:0},function(data){if(!data.length){if(!$this.options.force_safe){data="42"}else{data="";$this.panel.addClass("active");$this.text.focus();alert("You cannot use non-latin characters for type aliases!");return}}$this.text.val(data);$this.trigger.text(data);$($this).unbind("blur.name");$this.remove()})},remove:function(){this.trigger.show();this.panel.removeClass("active")}});$.fn[Plugin.prototype.name]=function(){var args=arguments;var method=args[0]?args[0]:null;return this.each(function(){var element=$(this);if(Plugin.prototype[method]&&element.data(Plugin.prototype.name)&&method!="initialize"){element.data(Plugin.prototype.name)[method].apply(element.data(Plugin.prototype.name),Array.prototype.slice.call(args,1))}else if(!method||$.isPlainObject(method)){var plugin=new Plugin;if(Plugin.prototype["initialize"]){plugin.initialize.apply(plugin,$.merge([element],args))}element.data(Plugin.prototype.name,plugin)}else{$.error("Method "+method+" does not exist on jQuery."+Plugin.name)}})}})(jQuery);