/* Copyright (C) YOOtheme GmbH, http://www.gnu.org/licenses/gpl.html GNU/GPL */

jQuery(function($){var form=$('form[name="adminForm"]'),count=$('[name="boxchecked"]:hidden',form);$("#submenu li").addClass(function(){return"item"+($(this).index()+1)});$("select.auto-submit").bind("change",function(){form.submit()});$("table.stripe tbody tr").addClass(function(i,cls){return i%2?"even":"odd"});form.delegate("input.check-all","click",function(e){var value=$(this).is(":checked");var check=$('[name="cid[]"]:checkbox',form).attr("checked",function(i,attr){return value});count.val(check.filter(":checked").length)});form.delegate('[name="cid[]"]:checkbox',"click",function(e){var value=parseInt(count.val());count.val($(this).is(":checked")?value+1:value-1)});form.delegate('table tr a[rel^="task-"]',"click",function(e){e.preventDefault();var id=$(this).closest("tr").find('input[name="cid[]"]').val();$('input[name="task"]',form).val($(this).attr("rel").replace(/task-/,""));form.append('<input type="hidden" name="cid" value="'+id+'" />');form.submit()});$("#parameter-accordion").accordionMenu({mode:"slide",display:0});$.each(["apply","save","save-new"],function(i,task){var button=$("#toolbar-"+task+" a, #toolbar-"+task+" button");if(button.length){var submittask=button.attr("onclick").toString().replace(/\n*/gi,"").replace(/.*submitbutton\(['|"](.*)['|"]\).*/g,"$1");button.removeAttr("onclick").bind("click",function(event){var triggerEvent=$.Event("validate.adminForm");$(this).trigger(triggerEvent);if(!triggerEvent.isDefaultPrevented()){form.find(".placeholder:text").val("");submitbutton(submittask)}})}});$("#nav li.level1 a").each(function(){$(this).attr("title",$.trim($(this).text()))});if($("#nav [data-zooversion].active").length){$('<span class="version" />').text("ZOO "+$("#nav [data-zooversion].active").data("zooversion")).appendTo("#nav div.bar")}$("#nav").MenuResize();$.Message=function(data,erroronly){var options=$.parseJSON(data);if(options){if(options.group=="info"){if(erroronly)return;return}else if(options.group=="error"){alert(options.title+"-"+options.text);return}}window.location="index.php"}});(function($){var Plugin=function(){};$.extend(Plugin.prototype,{name:"MenuResize",initialize:function(nav,options){this.options=$.extend({},this.options,options);var $this=this;this.nav=nav;this.spans=nav.find("li.level1 > .level1 > span");this.widths=[],this.padding_lefts=[],this.padding_rights=[];this.spans.each(function(i){$this.widths[i]=parseInt($(this).css("width").replace("px",""));$this.padding_lefts[i]=parseInt($(this).css("padding-left").replace("px",""));$this.padding_rights[i]=parseInt($(this).css("padding-right").replace("px",""))});this.width=0;nav.find("li.level1").each(function(){$this.width+=$(this).outerWidth(true)});this.initial_width=this.width;this.resizeTabs();$(window).bind("resize",function(){$this.resizeTabs()})},resizeTabs:function(){var $this=this;var max_width=this.nav.innerWidth();var current_widths=[],current_padding_lefts=[],current_padding_rights=[];this.spans.each(function(i){current_widths[i]=$this.widths[i];current_padding_lefts[i]=$this.padding_lefts[i];current_padding_rights[i]=$this.padding_rights[i]});this.width=this.initial_width;while(max_width<=this.width){var max=0,changed=false;this.spans.each(function(i){if(current_padding_lefts[i]>0){$this.width-=1;current_padding_lefts[i]-=1;changed=true}if(current_padding_rights[i]>0){$this.width-=1;current_padding_rights[i]-=1;changed=true}if(current_widths[i]>current_widths[max]){max=i}});if(changed===false){this.width-=10;current_widths[max]-=10}}this.spans.each(function(i){if($(this).css("width")!=current_widths[i]+"px"){$(this).css("width",current_widths[i]+"px")}if($(this).css("padding-left")!=current_padding_lefts[i]+"px"){$(this).css("padding-left",current_padding_lefts[i]+"px")}if($(this).css("padding-right")!=current_padding_rights[i]+"px"){$(this).css("padding-right",current_padding_rights[i]+"px")}})}});$.fn[Plugin.prototype.name]=function(){var args=arguments;var method=args[0]?args[0]:null;return this.each(function(){var element=$(this);if(Plugin.prototype[method]&&element.data(Plugin.prototype.name)&&method!="initialize"){element.data(Plugin.prototype.name)[method].apply(element.data(Plugin.prototype.name),Array.prototype.slice.call(args,1))}else if(!method||$.isPlainObject(method)){var plugin=new Plugin;if(Plugin.prototype["initialize"]){plugin.initialize.apply(plugin,$.merge([element],args))}element.data(Plugin.prototype.name,plugin)}else{$.error("Method "+method+" does not exist on jQuery."+Plugin.name)}})}})(jQuery);